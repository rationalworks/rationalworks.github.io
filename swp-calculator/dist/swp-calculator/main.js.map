{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"dark-font\\\">\\r\\n\\r\\n  <ol class=\\\"breadcrumb cyan lighten-4\\\">\\r\\n    <li class=\\\"breadcrumb-item active\\\">SWP Calculator</li>\\r\\n  </ol>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n    <!--Main content begin -->\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <!-- Input begin -->\\r\\n      <ol class=\\\"breadcrumb cyan lighten-4\\\">\\r\\n        <li class=\\\"breadcrumb-item active\\\">Input</li>\\r\\n      </ol>\\r\\n      <!-- Input end -->\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"defaultFormLoginEmailEx\\\" class=\\\"grey-text\\\">Total Amount</label>\\r\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"initialCapital\\\" >\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"defaultFormLoginEmailEx\\\" class=\\\"grey-text\\\">Equity Perentage (%)</label>\\r\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"equityPerentage\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"defaultFormLoginEmailEx\\\" class=\\\"grey-text\\\">Debt Perentage (%)</label>\\r\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"debtPercent\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"defaultFormLoginEmailEx\\\" class=\\\"grey-text\\\">Increase in Withdrawl (%)</label>\\r\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"withdrawlIncreasePercent\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"defaultFormLoginEmailEx\\\" class=\\\"grey-text\\\">Equity Growth Perentage (%)</label>\\r\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"equityGrowthPerentage\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"defaultFormLoginEmailEx\\\" class=\\\"grey-text\\\">Debt Growth Perentage (%)</label>\\r\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"debtGrowthPercent\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n              <label for=\\\"defaultFormLoginEmailEx\\\" class=\\\"grey-text\\\">Monthly withdrawl</label>\\r\\n              <input type=\\\"email\\\" class=\\\"form-control\\\"   [(ngModel)]=\\\"initialWithdrawl\\\">\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"text-left\\\">\\r\\n            <button class=\\\"btn btn-indigo\\\" type=\\\"submit\\\" (click)=\\\"startSimulation()\\\" >Calculate</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- Output begin -->\\r\\n      <ol class=\\\"breadcrumb cyan lighten-4\\\">\\r\\n        <li class=\\\"breadcrumb-item active\\\">Results</li>\\r\\n      </ol>\\r\\n\\r\\n      <table class=\\\"table table-hover\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>S.No</th>\\r\\n              <th>Year</th>\\r\\n              <th>Year Begin Balence</th>\\r\\n              <th>Withdrawn</th>\\r\\n              <th>Equity Value</th>\\r\\n              <th>Debt Value</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n              <tr  *ngFor=\\\"let yearRecord of tableData; let i=index\\\">\\r\\n                  <th scope=\\\"row\\\">{{i + 1}}</th>\\r\\n                  <td>{{yearRecord.year}}</td>\\r\\n                  <td>{{yearRecord.yeb}}</td>\\r\\n                  <td>{{yearRecord.withdraw}}</td>\\r\\n                  <td>{{yearRecord.eqv}}</td>\\r\\n                  <td>{{yearRecord.dv}}</td>\\r\\n                </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n\\r\\n        <div style=\\\"display: block\\\">\\r\\n            <canvas mdbChart\\r\\n                [chartType]=\\\"chartType\\\"\\r\\n                [datasets]=\\\"chartDatasets\\\"\\r\\n                [labels]=\\\"chartLabels\\\"\\r\\n                [colors]=\\\"chartColors\\\"\\r\\n                [options]=\\\"chartOptions\\\"\\r\\n                [legend]=\\\"true\\\"\\r\\n                (chartHover)=\\\"chartHovered($event)\\\"\\r\\n                (chartClick)=\\\"chartClicked($event)\\\">\\r\\n            </canvas>\\r\\n        </div>\\r\\n\\r\\n      <!-- Output end -->\\r\\n\\r\\n    </div>\\r\\n    <!--Main content end -->\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"dark-font\\\">\\r\\n\\r\\n    <ol class=\\\"breadcrumb cyan lighten-4\\\">\\r\\n      <li class=\\\"breadcrumb-item active\\\">SWP Calculator</li>\\r\\n    </ol>\\r\\n  </div>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n\n  initialCapital: number = 300000;\n  equityPerentage: number = 70;\n  debtPercent: number = 30;\n  equityGrowthPerentage: number = 15;\n  debtGrowthPercent: number = 8;\n  initialWithdrawl: number = 2000;\n  withdrawlIncreasePercent: number = 5;\n  currentYear: number = (new Date()).getFullYear();\n  maxYearCount: number = 30;\n\n  public chartDatasets: Array<any> = [\n    { data: [], label: 'Equity' },\n    { data: [], label: 'Debt' },\n    { data: [], label: 'Total value' }\n  ];\n\n  public tableData: Array<any> = [];\n\n  public chartLabels: Array<any> = [];\n\n  public startSimulation(): void {\n\n    this.chartDatasets[0].data = [];\n    this.chartDatasets[1].data = [];\n    this.chartLabels = [];\n\n    let currentCapital:number = this.initialCapital ;\n    let currentWithdrawl:number = this.initialWithdrawl*12;\n    let currentEquityValue:number = currentCapital * (this.equityPerentage / 100);\n    let currentDebtValue:number = currentCapital * (this.debtPercent / 100);\n    let currentYearValue:number = this.currentYear;\n\n    let itrInterst = 0;\n    while (currentYearValue < (this.currentYear + this.maxYearCount) && (currentCapital>0)) {\n\n      this.chartDatasets[0].data.push(Math.round(currentEquityValue));\n      this.chartDatasets[1].data.push(Math.round(currentDebtValue));\n      this.chartDatasets[2].data.push(Math.round(currentCapital));\n      this.chartLabels.push(currentYearValue);\n      this.tableData.push({\"year\":currentYearValue,\"eqv\":Math.round(currentEquityValue),\"dv\":Math.round(currentDebtValue),\"withdraw\":Math.round(currentWithdrawl),\"yeb\":Math.round(currentCapital)});\n      console.log(this.tableData);\n      console.log(\"TOT:\"+(currentEquityValue+currentDebtValue)+\" EQV:\"+currentEquityValue+\" DV:\"+currentDebtValue+\" WD:\"+currentWithdrawl +\" Y:\"+currentYearValue)\n      console.log(\"TOT:\"+currentCapital);\n      currentWithdrawl = currentWithdrawl +(currentWithdrawl *(this.withdrawlIncreasePercent/100));\n      \n      currentEquityValue =currentEquityValue -(currentWithdrawl*(this.equityPerentage/100));\n      currentDebtValue =currentDebtValue -(currentWithdrawl*(this.debtPercent/100));\n      console.log(\"EQV -W:\"+currentEquityValue+\" DV -W:\"+currentDebtValue);\n\n      currentEquityValue = currentEquityValue + (currentEquityValue * (this.equityGrowthPerentage / 100));\n      currentDebtValue = currentDebtValue + (currentDebtValue * (this.debtGrowthPercent / 100));\n\n      console.log(\"EQV +G:\"+currentEquityValue+\" DV +G:\"+currentDebtValue);\n      currentCapital = currentEquityValue +currentDebtValue;\n      \n\n      currentYearValue++;\n    }\n    //console.log(this.chartDatasets[0].data);\n    //console.log(this.chartDatasets[1].data);\n    //console.log(this.chartLabels);\n  }\n\n\n  public chartType: string = 'line';\n\n\n\n  public chartColors: Array<any> = [\n    {\n      backgroundColor: 'rgba(220,220,220,0.2)',\n      borderColor: 'rgba(220,220,220,1)',\n      borderWidth: 2,\n      pointBackgroundColor: 'rgba(220,220,220,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(220,220,220,1)'\n    },\n    {\n      backgroundColor: 'rgba(151,187,205,0.2)',\n      borderColor: 'rgba(151,187,205,1)',\n      borderWidth: 2,\n      pointBackgroundColor: 'rgba(151,187,205,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(151,187,205,1)'\n    }\n  ];\n\n  public chartOptions: any = {\n    responsive: true\n  };\n  public chartClicked(e: any): void { }\n  public chartHovered(e: any): void { }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\n\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MDBBootstrapModule.forRoot(),\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [ NO_ERRORS_SCHEMA ]\n})\nexport class AppModule { }\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}